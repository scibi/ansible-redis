---

- name: Install required packages
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ redis__base_packages }}'
    - '{{ redis__server_packages }}'
    - '{{ redis__sentinel_packages }}'
    - '{{ redis__packages }}'

- name: Detect Redis version
  shell: redis-server -v | awk '{print $3}' | sed -e 's/v=//'
  changed_when: False
  register: redis__register_server_version
  when: redis__server_enabled|bool

- name: Create Redis auth system group
  group:
    name: '{{ redis__auth_group }}'
    state: 'present'
    system: True

- name: Ensure that /etc/redis directory exists
  file:
    path: '/etc/redis'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Check current Redis diversions
  environment:
    LC_ALL: 'C'
  shell: dpkg-divert --list '/etc/redis/*.dpkg-divert' | awk '{print $NF}'
  register: redis__register_diversions
  check_mode: False
  changed_when: False

- name: Divert the original Redis config files
  command: 'dpkg-divert --quiet --local --divert /etc/redis/{{ item }}.dpkg-divert --rename /etc/redis/{{ item }}'
  with_items: [ 'redis.conf', 'sentinel.conf' ]
  when: ('/etc/redis/{{ item }}.dpkg-divert' not in redis__register_diversions.stdout_lines)

- name: Recreate the original Redis config file
  command: 'install -o {{ redis__user }} -g {{ redis__auth_group }} -m 0640
            /etc/redis/redis.conf.dpkg-divert /etc/redis/redis.conf'
  args:
    creates: '/etc/redis/redis.conf'
  when: redis__server_enabled|bool

- name: Create stub Redis config file
  template:
    src: 'etc/redis/redis.conf.j2'
    dest: '/etc/redis/redis.conf'
    owner: '{{ redis__user if redis__server_enabled|bool else "root" }}'
    group: '{{ redis__auth_group }}'
    mode: '0640'
    force: False

- name: Create initial Sentinel config file
  template:
    src: 'etc/redis/sentinel.conf.j2'
    dest: '/etc/redis/sentinel.conf'
    owner: '{{ redis__user if (redis__server_enabled|bool or redis__sentinel_enabled|bool) else "root" }}'
    group: '{{ redis__auth_group }}'
    mode: '0640'
    force: False
  register: redis__register_sentinel_init

- name: Create Sentinel hook script directories
  file:
    path: '/etc/redis/{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items: [ 'notify.d', 'trigger.d' ]

- name: Install Redis custom scripts
  copy:
    src: 'usr/local/lib/'
    dest: '/usr/local/lib/'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Symlink redis-password in $PATH
  file:
    path: '/usr/local/bin/redis-password'
    src: '/usr/local/lib/redis/redis-password'
    state: 'link'

- name: Set vm.overcommit
  sysctl:
    name: 'vm.overcommit_memory'
    value: 1
    sysctl_file: '/etc/sysctl.d/30-redis.conf'
  when: redis__overcommit_memory_enable|bool

- name: Disable Transparent Huge Pages
  include: disable-thp.yml
  when: redis__transparent_huge_pages_disable|bool

- name: Configure redis-server service
  include: redis-server.yml
  when: redis__server_enabled|bool

- name: Configure redis-sentinel service
  include: redis-sentinel.yml
  when: redis__sentinel_enabled|bool

- name: Disable Redis Server service if not enabled
  service:
    name: 'redis-server'
    state: 'stopped'
    enabled: False
  when: (not redis__server_enabled|bool and redis__sentinel_enabled|bool)

- name: Restart Redis Sentinel at install when enabled
  service:
    name: 'redis-sentinel'
    state: 'restarted'
    enabled: True
  when: redis__sentinel_enabled|bool and redis__register_sentinel_init|changed

- name: Make sure Ansible fact directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Setup Redis local facts
  template:
    src: 'etc/ansible/facts.d/redis.fact.j2'
    dest: '/etc/ansible/facts.d/redis.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: redis__register_facts

- name: Reload facts if they were modified
  action: setup
  when: redis__register_facts|changed
